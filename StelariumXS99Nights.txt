if game.PlaceId == 126509999114328
 then
    local IceLibrary = loadstring(game:HttpGet("https://github.com/contateste8/IceLibraryGreen/raw/refs/heads/main/IceLibraryGreen.txt"))()
WindowSetTitle("Stelarium X.S - 99 Nights in the Forest")

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local player = Players.LocalPlayer
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local UserInputService = game:GetService("UserInputService")
local displayName = Players.LocalPlayer.DisplayName

-- Tabs
local HomeTab = AddTab("Home")
local Tab1 = AddTab("Bring Items")
local Tab2 = AddTab("Damage")
local Tab3 = AddTab("Visual")
local Tab4 = AddTab("Teleports")
local Tab5 = AddTab("Character")
local Tab6 = AddTab("Lost Childs")
local Tab7 = AddTab("Credits")

-- Tab 1

AddUserMessage(HomeTab, "Hey " .. displayName .. " ")

AddSection(Tab1, "Bring Items")

local function BringParts(ParcialName)
    local character = player.Character or player.CharacterAdded:Wait()
    local hrp = character:WaitForChild("HumanoidRootPart")
    local base = workspace:WaitForChild("Items")

    for _, item in ipairs(base:GetChildren()) do
        if string.find(item.Name, ParcialName) then
            if item:IsA("Model") then
                -- Garante uma PrimaryPart, se n√£o houver
                if not item.PrimaryPart then
                    for _, part in ipairs(item:GetDescendants()) do
                        if part:IsA("BasePart") then
                            item.PrimaryPart = part
                            break
                        end
                    end
                end
                if item.PrimaryPart then
                    -- Desancora temporariamente as partes
                    local originalAnchored = {}
                    for _, part in ipairs(item:GetDescendants()) do
                        if part:IsA("BasePart") then
                            originalAnchored[part] = part.Anchored
                            part.Anchored = false
                        end
                    end

                    -- Move o modelo
                    item:PivotTo(hrp.CFrame * CFrame.new(0, 5, -10))

                    -- Restaura anchoring
                    for part, wasAnchored in pairs(originalAnchored) do
                        part.Anchored = wasAnchored
                    end
                end
            elseif item:IsA("BasePart") then
                local wasAnchored = item.Anchored
                item.Anchored = false
                item.CFrame = hrp.CFrame * CFrame.new(0, 5, -10)
                item.Anchored = wasAnchored
            end
        end
    end
end

AddButton(Tab1, "Bring All Steaks", function()
    BringParts("Steak")
end)

AddButton(Tab1, "Bring All Bunny Foots", function()
    BringParts("Bunny Foot")
end)

AddButton(Tab1, "Bring All Morsels", function()
    BringParts("Morsel")
end)

AddButton(Tab1, "Bring All Saplings", function()
    BringParts("Sapling")
end)

AddButton(Tab1, "Bring All Logs", function()
    BringParts("Log")
end)

AddButton(Tab1, "Bring All Sheet Metals", function()
    BringParts("Sheet Metal")
end)

AddButton(Tab1, "Bring All Scraps", function()
    BringParts("Scrap")
end)

AddButton(Tab1, "Bring All UFO Components", function()
    BringParts("UFO Component")
end)

AddButton(Tab1, "Bring All Bolts", function()
    BringParts("Bolt")
end)

AddButton(Tab1, "Bring All Wolf Pelts", function()
    BringParts("Wolf Pelt")
end)

AddButton(Tab1, "Bring All Alpha Wolf Pelts", function()
    BringParts("Alpha Wolf Pelt")
end)

AddButton(Tab1, "Bring All Bear Pelts", function()
    BringParts("Bear Pelt")
end)

AddButton(Tab1, "Bring All Coals", function()
    BringParts("Coal")
end)

AddButton(Tab1, "Bring All Meat? Sandwichs", function()
    BringParts("Meat%? Sandwich")
end)

AddButton(Tab1, "Bring All UFO Junks", function()
    BringParts("UFO Junk")
end)

AddButton(Tab1, "Bring All Old Flashlights", function()
    BringParts("Old Flashlight")
end)

AddButton(Tab1, "Bring All Chairs", function()
    BringParts("Chair")
end)

AddButton(Tab1, "Bring All Fuel Canisters", function()
    BringParts("Fuel Canister")
end)

AddButton(Tab1, "Bring All Bandages", function()
    BringParts("Bandage")
end)

AddButton(Tab1, "Bring All Medkits", function()
    BringParts("Medkit")
end)

AddButton(Tab1, "Bring All UFO Scraps", function()
    BringParts("UFO Scrap")
end)

AddButton(Tab1, "Bring All Broken Fan", function()
    BringParts("Broken Fan")
end)

AddButton(Tab1, "Bring All Carrots", function()
    BringParts("Carrot")
end)

AddButton(Tab1, "Bring All Berrys", function()
    BringParts("Berry")
end)

AddButton(Tab1, "Bring All Revolver Ammos", function()
    BringParts("Revolver Ammo")
end)

AddButton(Tab1, "Bring All Rifle Ammos", function()
    BringParts("Rifle Ammo")
end)

AddButton(Tab1, "Bring All Laser Fence Blueprints", function()
    BringParts("Laser Fence Blueprint")
end)

AddButton(Tab1, "Bring All Old Radios", function()
    BringParts("Old Radio")
end)

-- Tab 2

AddSection(Tab2, "Npcs")

local charactersFolder = workspace:WaitForChild("Characters")
local remote = ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("ToolDamageObject")
local id = "51_" .. tostring(LocalPlayer.UserId)
local cframe = CFrame.new(
	-185.71339416503906, -2.4191694259643555, 104.75354766845703,
	-0.7377737164497375, 0.39271876215934753, -0.5490555167198181,
	1.208474742497856e-07, 0.8133576512336731, 0.5817639827728271,
	0.6750481128692627, 0.4292100965976715, -0.6000739336013794
)

AddToggle(Tab2, "Auto Damage All Npcs (Axe Only)", false, function(Value)
	running = Value

	if running then
		task.spawn(function()
			while running do
				local inventory = LocalPlayer:FindFirstChild("Inventory")
				if inventory then
					for _, character in ipairs(charactersFolder:GetChildren()) do
						if character:IsA("Model") then
							for _, item in ipairs(inventory:GetChildren()) do
								if item:IsA("Model") then
									local name = item.Name
									if name:match("^%w+%sAxe$") then
										task.spawn(function()
											pcall(function()
												remote:InvokeServer(character, item, id, cframe)
											end)
										end)
									end
								end
							end
						end
					end
				end
				task.wait()
			end
		end)
	end
end)

-- Tab 3

AddSection(Tab3, "Esps")

local Camera = workspace.CurrentCamera
local itemsFolder = workspace:WaitForChild("Items")

local espList = {}
local espEnabled = false
local espConnection

local FONT = Enum.Font.SourceSans
local WHITE = Color3.fromRGB(255, 255, 255)
local GREEN = Color3.fromRGB(0, 255, 0)

local function getMainPart(model)
	for _, part in ipairs(model:GetDescendants()) do
		if part:IsA("BasePart") then
			return part
		end
	end
end

local function createESP(model, color, labelText)
	if espList[model] then return end
	local part = getMainPart(model)
	if not part then return end

	local esp = Instance.new("BillboardGui")
	esp.Name = "ESP"
	esp.Adornee = part
	esp.AlwaysOnTop = true
	esp.Size = UDim2.new(0, 200, 0, 30)
	esp.StudsOffset = Vector3.new(0, 3, 0)
	esp.Parent = model

	local textLabel = Instance.new("TextLabel")
	textLabel.BackgroundTransparency = 1
	textLabel.Size = UDim2.new(1, 0, 1, 0)
	textLabel.TextColor3 = color
	textLabel.TextStrokeTransparency = 0.5
	textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
	textLabel.TextScaled = true
	textLabel.Font = FONT
	textLabel.Text = labelText
	textLabel.Parent = esp

	espList[model] = {
		gui = esp,
		label = textLabel,
		part = part,
		baseText = labelText
	}
end

local function clearAllESP()
	for model, data in pairs(espList) do
		if data.gui then data.gui:Destroy() end
	end
	espList = {}
end

local function startESP()
	espConnection = RunService.RenderStepped:Connect(function()
		for model, data in pairs(espList) do
			if model and model.Parent and data.part and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
				local distance = (data.part.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
				data.label.Text = data.baseText .. " | " .. math.floor(distance) .. "m"
			else
				if data.gui then data.gui:Destroy() end
				espList[model] = nil
			end
		end
	end)
	
	coroutine.wrap(function()
		while espEnabled do
			for _, model in ipairs(itemsFolder:GetChildren()) do
				if model:IsA("Model") and not espList[model] then
					local lowerName = model.Name:lower()
					if model.Name == "Alien Chest" then
						createESP(model, GREEN, "Alien Chest")
					elseif lowerName:find("item chest") or lowerName:find("itemchest") then
						createESP(model, WHITE, "Chest")
					end
				end
			end
			task.wait(0.5)
		end
	end)()
end

local function stopESP()
	if espConnection then
		espConnection:Disconnect()
		espConnection = nil
	end
	clearAllESP()
end

AddToggle(Tab3, "Esp Chests", false, function(Value)
espEnabled = Value
		if Value then
			startESP()
		else
			stopESP()
		end
end)

local charactersFolder = workspace:WaitForChild("Characters")
local espLostChildEnabled = false
local espLostChildConnection

AddToggle(Tab3, "Esp Lost Childs", false, function(Value)
	espLostChildEnabled = Value

	if Value then
		espLostChildConnection = RunService.RenderStepped:Connect(function()
			for model, data in pairs(espList) do
				if model and model.Parent and data.part and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
					local distance = (data.part.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
					data.label.Text = data.baseText .. " | " .. math.floor(distance) .. "m"
				else
					if data.gui then data.gui:Destroy() end
					espList[model] = nil
				end
			end
		end)

		coroutine.wrap(function()
			while espLostChildEnabled do
				for _, model in ipairs(charactersFolder:GetChildren()) do
					if model:IsA("Model") and not espList[model] then
						if model.Name:lower():find("lost child") then
							createESP(model, Color3.fromRGB(0, 255, 0), model.Name)
						end
					end
				end
				task.wait(0.5)
			end
		end)()
	else
		if espLostChildConnection then
			espLostChildConnection:Disconnect()
			espLostChildConnection = nil
		end
		for model, data in pairs(espList) do
			if model:IsDescendantOf(charactersFolder) and model.Name:lower():find("lost child") then
				if data.gui then data.gui:Destroy() end
				espList[model] = nil
			end
		end
	end
end)

AddSection(Tab3, "Fullbright & Remove Fog")

local FullBrightSettings = {}
local FogSettings = {}

local FullBrightConnection
local FogConnection
local FogChangedConnection

AddToggle(Tab3, "Fullbright", false, function(Value)
    if Value then
        FullBrightSettings = {
            Brightness = Lighting.Brightness,
            ClockTime = Lighting.ClockTime,
            Ambient = Lighting.Ambient,
            GlobalShadows = Lighting.GlobalShadows,
        }

        FullBrightConnection = RunService.RenderStepped:Connect(function()
            Lighting.Brightness = 2
            Lighting.ClockTime = 14
            Lighting.Ambient = Color3.fromRGB(255, 255, 255)
            Lighting.GlobalShadows = false
        end)
    else
        if FullBrightConnection then
            FullBrightConnection:Disconnect()
            FullBrightConnection = nil
        end
        Lighting.Brightness = FullBrightSettings.Brightness or 1
        Lighting.ClockTime = FullBrightSettings.ClockTime or 12
        Lighting.Ambient = FullBrightSettings.Ambient or Color3.new(1, 1, 1)
        Lighting.GlobalShadows = FullBrightSettings.GlobalShadows ~= nil and FullBrightSettings.GlobalShadows or true
    end
end)

AddToggle(Tab3, "Remove Fog", false, function(Value)
    if Value then
        FogSettings = {
            FogStart = Lighting.FogStart,
            FogEnd = Lighting.FogEnd,
        }

        FogConnection = RunService.RenderStepped:Connect(function()
            Lighting.FogStart = 0
            Lighting.FogEnd = 100000
        end)

        FogChangedConnection = Lighting.Changed:Connect(function(prop)
            if prop == "FogStart" then
                Lighting.FogStart = 0
            elseif prop == "FogEnd" then
                Lighting.FogEnd = 100000
            end
        end)
    else
        if FogConnection then
            FogConnection:Disconnect()
            FogConnection = nil
        end
        if FogChangedConnection then
            FogChangedConnection:Disconnect()
            FogChangedConnection = nil
        end

        Lighting.FogStart = FogSettings.FogStart or 0
        Lighting.FogEnd = FogSettings.FogEnd or 1000
    end
end)

-- Tab 4

AddSection(Tab4, "Chests Teleports")

AddButton(Tab4, "Teleport to Random Chest", function()
	local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local itemsFolder = workspace:WaitForChild("Items")

local function getHRP()
	local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	return char:WaitForChild("HumanoidRootPart")
end

local function getRandomChest()
	local validChests = {}

	for _, model in ipairs(itemsFolder:GetChildren()) do
		if model:IsA("Model") and model.Name ~= "Alien Chest" then
			local lowerName = model.Name:lower()
			if lowerName:find("item chest") or lowerName:find("itemchest") then
				local part = model:FindFirstChildWhichIsA("BasePart", true)
				if part then
					table.insert(validChests, part)
				end
			end
		end
	end

	if #validChests > 0 then
		return validChests[math.random(1, #validChests)]
	end
end

local function teleportToRandomChest()
	local target = getRandomChest()
	if target then
		local hrp = getHRP()
		hrp.CFrame = target.CFrame + Vector3.new(0, 5, 0)
	end
end

teleportToRandomChest()
end)

AddButton(Tab4, "Teleport to Alien Chest", function()
	local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Items = workspace:WaitForChild("Items")
local ChestModel = Items:FindFirstChild("Alien Chest")

local function getHRP()
	local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	return char:WaitForChild("HumanoidRootPart")
end

if ChestModel and ChestModel:IsA("Model") then
	local part = ChestModel:FindFirstChildWhichIsA("BasePart", true)
	if part then
		getHRP().CFrame = part.CFrame + Vector3.new(0, 5, 0)
	end
end
end)

AddSection(Tab4, "Others Teleports")

AddButton(Tab4, "Teleport to Base", function()
	local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

local function TeleportToMainFire()
    local hrp = Character:WaitForChild("HumanoidRootPart")
    local mainFire = workspace:WaitForChild("Map"):WaitForChild("Campground"):WaitForChild("MainFire")

    if mainFire:IsA("Model") and mainFire.PrimaryPart then
        hrp.CFrame = mainFire.PrimaryPart.CFrame + Vector3.new(0, 5, 0)
    end
end

TeleportToMainFire()
end)

AddButton(Tab4, "Teleport to Random Tree", function()
	local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

local foliage = workspace:WaitForChild("Map"):WaitForChild("Foliage")
local smallTrees = {}

for _, model in ipairs(foliage:GetChildren()) do
	if model:IsA("Model") and model.Name == "Small Tree" then
		table.insert(smallTrees, model)
	end
end

if #smallTrees > 0 then
	local randomTree = smallTrees[math.random(1, #smallTrees)]
	local targetPart = nil
	for _, part in ipairs(randomTree:GetDescendants()) do
		if part:IsA("BasePart") then
			targetPart = part
			break
		end
	end

	if targetPart then
		HumanoidRootPart.CFrame = targetPart.CFrame + Vector3.new(0, 5, 0)
	end
end
end)

-- Tab 5

AddSection(Tab5, "Speed")

local SpeedSlider = AddSlider(Tab5, "Speed", {
    min = 0,
    max = 100,
    value = 16,
    callback = function(SpeedValue)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = SpeedValue
    end
})

AddButton(Tab5, "Default Speed", function()
    SpeedSlider.value = 16
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
end)

AddSection(Tab5, "Jump Power")

local JumpSlider = AddSlider(Tab5, "JumpPower", {
    min = 0,
    max = 200,
    value = 50,
    callback = function(JumpValue)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = JumpValue
    end
})

AddButton(Tab5, "Default JumpPower", function()
    JumpSlider.value = 50
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
end)

AddSection(Tab5, "Gravity")

local GravitySlider = AddSlider(Tab5, "Gravity", {
    min = 0,
    max = 196.2,
    value = 196.2,
    callback = function(GravityValue)
        workspace.Gravity = GravityValue
    end
})

AddButton(Tab5, "Default Gravity", function()
    GravitySlider.value = 196.2
    workspace.Gravity = 196.2
end)

AddSection(Tab5, "Noclip & Infinite Jump")

local NoclipActive = false
local InfiniteJumpActive = false
local NoclipConnection
local JumpConnection

AddToggle(Tab5, "Noclip", false, function(Value)
    NoclipActive = Value

    if NoclipActive then
        NoclipConnection = RunService.Stepped:Connect(function()
            local character = LocalPlayer.Character
            if character then
                for _, part in ipairs(character:GetDescendants()) do
                    if part:IsA("BasePart") and part.CanCollide == true then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        if NoclipConnection then
            NoclipConnection:Disconnect()
            NoclipConnection = nil
        end

        local character = LocalPlayer.Character
        if character then
            for _, part in ipairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end
end)

AddToggle(Tab5, "Infinite Jump", false, function(Value)
    InfiniteJumpActive = Value

    if InfiniteJumpActive then
        JumpConnection = UserInputService.JumpRequest:Connect(function()
            local character = LocalPlayer.Character
            if character and character:FindFirstChildOfClass("Humanoid") then
                character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    else
        if JumpConnection then
            JumpConnection:Disconnect()
            JumpConnection = nil
        end
    end
end)

-- Tab 6

AddSection(Tab6, "The Lost Childs will appear here")

local createdButtons = {}
local charactersFolder = workspace:WaitForChild("Characters")

local function createTeleportButtonFor(model)
	if createdButtons[model] then return end
	if not model:IsA("Model") then return end
	if not model.Name:lower():find("lost child") then return end

	local buttonName = "Teleport to " .. model.Name

	AddButton(Tab6, buttonName, function()
		local lp = game.Players.LocalPlayer
		local hrp = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
		if not hrp then return end

		local part = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChildWhichIsA("BasePart")
		if part then
			hrp.CFrame = part.CFrame + Vector3.new(0, 3, 0)
		end
	end)

	createdButtons[model] = true
end

for _, model in ipairs(charactersFolder:GetChildren()) do
	createTeleportButtonFor(model)
end

charactersFolder.ChildAdded:Connect(function(child)
	task.wait(0.2)
	createTeleportButtonFor(child)
end)

-- Tab 7

AddSection(Tab7, "Credits")

AddParagraph(Tab7, "Credits", "Contributors: @mr.stelarus667, @kiwidevolta_aolaz, @dahmster90\nDev: @contateste6\nNotice: The library for this script was made by @contateste6\nOriginal Library: Ice Hub")

AddSection(Tab7, "Discord")

AddParagraph(Tab7, "Stelarium X.S Discord", "Click the button below to copy the invite link to the Stelarium X.S server!", "98988652345690", 100, 100)

AddButton(Tab7, "Copy Invite Link", function()
    setclipboard("https://discord.gg/HBm8WYDPTH")
end)
else
    warn("Game not supported")
end